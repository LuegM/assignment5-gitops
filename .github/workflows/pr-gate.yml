name: PR Gate - GitOps Validation
on:
  pull_request:
    branches: [ master ]

jobs:
  kube-linter:
    name: Kubernetes Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kube-linter
      run: |
        curl -L https://github.com/stackrox/kube-linter/releases/download/v0.6.8/kube-linter-linux.tar.gz | tar xz
        sudo mv kube-linter /usr/local/bin/
        
    - name: Run kube-linter
      run: |
        # Create a basic kube-linter config that excludes overly strict checks
        cat > .kube-linter.yaml << 'EOF'
        checks:
          addAllBuiltIn: true
          exclude:
            - "default-service-account"
            - "dnsconfig-options"
            - "minimum-three-replicas"
            - "no-liveness-probe"
            - "no-node-affinity"
            - "no-readiness-probe"
            - "no-rolling-update-strategy"
            - "non-isolated-pod"
            - "privileged-ports"
            - "read-secret-from-env-var"
            - "required-annotation-email"
            - "required-label-owner"
        EOF
        
        # Find and lint all Kubernetes manifests
        find . -name "*.yaml" -o -name "*.yml" | grep -E "(k8s|environments)" | while read file; do
          echo "Linting: $file"
          # Skip SealedSecrets as they have different structure
          if grep -q "kind: SealedSecret" "$file"; then
            echo "Skipping SealedSecret: $file"
            continue
          fi
          kube-linter lint "$file" --config .kube-linter.yaml
        done

  validate-kustomize:
    name: Validate Kustomize
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
        
    - name: Validate Kustomize builds
      run: |
        # Find all kustomization files and validate them
        find . -name "kustomization.yaml" -o -name "kustomization.yml" | while read kustomization; do
          dir=$(dirname "$kustomization")
          echo "Validating Kustomize in: $dir"
          kubectl kustomize "$dir" > /dev/null
        done
